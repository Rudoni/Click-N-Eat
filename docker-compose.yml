version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: rootpassword
      POSTGRES_DB: accountdb
    ports:
      - "5433:5432"  # Externe:Interne
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - mynetwork

  mongodb:
    image: mongo:6
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - mynetwork

  account-service:
    build:
      context: ./services/account/serveur_node
    container_name: account_service
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
    networks:
      - mynetwork
    volumes:
      - ./services/account/serveur_node:/app
      - /app/node_modules

  restaurant-service:
    build:
      context: ./services/restaurant
    container_name: restaurant_service
    ports:
      - "3003:3003"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
    networks:
      - mynetwork
    volumes:
      - ./services/account/serveur_node:/app
      - /app/node_modules

  order-service:
    build:
      context: ./services/order
    container_name: order_service
    ports:
      - "3004:3004"
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=production
    networks:
      - mynetwork
    volumes:
      - ./services/account/serveur_node:/app
      - /app/node_modules

  api-gateway:
    build:
      context: ./api_gateway
    container_name: api_gateway
    ports:
      - "3100:3100"
    depends_on:
      - account-service
    networks:
      - mynetwork
    volumes:
      - ./api_gateway:/app
      - /app/node_modules

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - mynetwork
    depends_on:
      - api-gateway

volumes:
  pgdata:
  mongodb_data:

networks:
  mynetwork:
    driver: bridge
